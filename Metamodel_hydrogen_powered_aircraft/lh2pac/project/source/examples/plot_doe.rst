
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/plot_doe.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_plot_doe.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_plot_doe.py:


Design of experiments
=====================

.. GENERATED FROM PYTHON SOURCE LINES 6-10

.. code-block:: default

    from gemseo.api import configure_logger
    from gemseo.api import create_design_space
    from gemseo.api import create_discipline








.. GENERATED FROM PYTHON SOURCE LINES 11-12

Create the discipline:

.. GENERATED FROM PYTHON SOURCE LINES 12-18

.. code-block:: default

    from gemseo.api import create_scenario

    configure_logger()

    discipline = create_discipline("AnalyticDiscipline",expressions={"z":"(1-x)**2+100*(y-x**2)**2"},name="Rosenbrock")








.. GENERATED FROM PYTHON SOURCE LINES 19-20

Create the discipline:

.. GENERATED FROM PYTHON SOURCE LINES 20-24

.. code-block:: default

    design_space = create_design_space()
    design_space.add_variable("x",l_b=-2,u_b=2)
    design_space.add_variable("y",l_b=-2,u_b=2)








.. GENERATED FROM PYTHON SOURCE LINES 25-26

Create the scenario:

.. GENERATED FROM PYTHON SOURCE LINES 26-29

.. code-block:: default

    scenario = create_scenario([discipline],"DisciplinaryOpt", "z", design_space, scenario_type="DOE")
    scenario.execute({"algo": "OT_OPT_LHS", "n_samples": 100})





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

        INFO - 14:41:50:  
        INFO - 14:41:50: *** Start DOEScenario execution ***
        INFO - 14:41:50: DOEScenario
        INFO - 14:41:50:    Disciplines: Rosenbrock
        INFO - 14:41:50:    MDO formulation: DisciplinaryOpt
        INFO - 14:41:50: Optimization problem:
        INFO - 14:41:50:    minimize z(x, y)
        INFO - 14:41:50:    with respect to x, y
        INFO - 14:41:50:    over the design space:
        INFO - 14:41:50:    +------+-------------+-------+-------------+-------+
        INFO - 14:41:50:    | name | lower_bound | value | upper_bound | type  |
        INFO - 14:41:50:    +------+-------------+-------+-------------+-------+
        INFO - 14:41:50:    | x    |      -2     |  None |      2      | float |
        INFO - 14:41:50:    | y    |      -2     |  None |      2      | float |
        INFO - 14:41:50:    +------+-------------+-------+-------------+-------+
        INFO - 14:41:50: Solving optimization problem with algorithm OT_OPT_LHS:
        INFO - 14:41:50: Generation of OT_OPT_LHS DOE with OpenTURNS
        INFO - 14:41:50: ...   0%|          | 0/100 [00:00<?, ?it]
        INFO - 14:41:50: ... 100%|██████████| 100/100 [00:00<00:00, 4694.40 it/sec, obj=167]
        INFO - 14:41:50: Optimization result:
        INFO - 14:41:50:    Optimizer info:
        INFO - 14:41:50:       Status: None
        INFO - 14:41:50:       Message: None
        INFO - 14:41:50:       Number of calls to the objective function by the optimizer: 100
        INFO - 14:41:50:    Solution:
        INFO - 14:41:50:       Objective: 0.7502023831914535
        INFO - 14:41:50:       Design space:
        INFO - 14:41:50:       +------+-------------+--------------------+-------------+-------+
        INFO - 14:41:50:       | name | lower_bound |       value        | upper_bound | type  |
        INFO - 14:41:50:       +------+-------------+--------------------+-------------+-------+
        INFO - 14:41:50:       | x    |      -2     | 0.6290200784167475 |      2      | float |
        INFO - 14:41:50:       | y    |      -2     | 0.3173990065780083 |      2      | float |
        INFO - 14:41:50:       +------+-------------+--------------------+-------------+-------+
        INFO - 14:41:50: *** End DOEScenario execution (time: 0:00:00.034177) ***

    {'eval_jac': False, 'algo': 'OT_OPT_LHS', 'n_samples': 100}



.. GENERATED FROM PYTHON SOURCE LINES 30-31

Export the results to a dataset:

.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: default

    dataset = scenario.export_to_dataset(opt_naming=False)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Export the dataset to a pandas dataframe:

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    df = dataset.export_to_dataframe()
    print(df)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

          inputs                outputs
               x         y            z
               0         0            0
    0   1.922870 -0.983117  2191.602002
    1  -1.623831 -0.631063  1074.794249
    2  -1.284228 -0.939310   675.278032
    3  -1.404675 -1.412094  1151.744652
    4  -1.948194 -1.200895  2505.048222
    ..       ...       ...          ...
    95 -1.529573 -0.743620   957.019782
    96 -0.030064 -1.364104   187.385541
    97  1.278946  0.531163   122.078532
    98 -0.501204  1.450870   146.173021
    99  0.100055  1.297336   166.530600

    [100 rows x 3 columns]




.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. seealso::

   - `Dataset examples <https://gemseo.readthedocs.io/en/stable/examples/dataset/index.html>`__
   - `DOE examples <https://gemseo.readthedocs.io/en/stable/examples/doe/index.html>`__


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.481 seconds)


.. _sphx_glr_download_examples_plot_doe.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_doe.py <plot_doe.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_doe.ipynb <plot_doe.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/plot_sensitivity_analysis.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_plot_sensitivity_analysis.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_plot_sensitivity_analysis.py:


Sensitivity analysis
====================

In this example,
we will use the Sobol' analysis to quantify
the sensitivity of the output of the Ishigami function to its inputs:

.. math::
   f(x_1,x_2,x_3)=\sin(x_1)+7\sin(x_2)^2+0.1*x_3^4\sin(x_1)

where :math:`x_1,x_2,x_3\in[-\pi,\pi].

.. GENERATED FROM PYTHON SOURCE LINES 14-22

.. code-block:: default

    import pprint

    from gemseo.algos.parameter_space import ParameterSpace
    from gemseo.api import create_discipline
    from gemseo.uncertainty.sensitivity.sobol.analysis import SobolAnalysis
    from matplotlib import pyplot as plt
    from numpy import pi








.. GENERATED FROM PYTHON SOURCE LINES 23-25

Firstly,
we create the Ishigami function:

.. GENERATED FROM PYTHON SOURCE LINES 25-31

.. code-block:: default

    discipline = create_discipline(
        "AnalyticDiscipline",
        expressions={"y": "sin(x2)+7*sin(x1)**2+0.1*x3**4*sin(x2)"},
        name="Ishigami"
    )








.. GENERATED FROM PYTHON SOURCE LINES 32-34

Then,
we define the uncertain space with uniform distributions:

.. GENERATED FROM PYTHON SOURCE LINES 34-40

.. code-block:: default

    uncertain_space = ParameterSpace()
    for name in ["x1", "x2", "x3"]:
        uncertain_space.add_random_variable(
            name, "OTUniformDistribution", minimum=-pi, maximum=pi
        )








.. GENERATED FROM PYTHON SOURCE LINES 41-43

From that,
we launch a Sobol' analysis with 1000 samples:

.. GENERATED FROM PYTHON SOURCE LINES 43-46

.. code-block:: default

    sobol = SobolAnalysis([discipline], uncertain_space, 1000)
    sobol.compute_indices()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    {'first': {'y': [{'x1': array([0.36294854]), 'x2': array([0.37420859]), 'x3': array([0.11861077])}]}, 'total': {'y': [{'x1': array([0.38993571]), 'x2': array([0.62957294]), 'x3': array([0.31700952])}]}}



.. GENERATED FROM PYTHON SOURCE LINES 47-48

and print the results:

.. GENERATED FROM PYTHON SOURCE LINES 48-51

.. code-block:: default

    pprint.pprint(sobol.first_order_indices)
    pprint.pprint(sobol.total_order_indices)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    {'y': [{'x1': array([0.36294854]),
            'x2': array([0.37420859]),
            'x3': array([0.11861077])}]}
    {'y': [{'x1': array([0.38993571]),
            'x2': array([0.62957294]),
            'x3': array([0.31700952])}]}




.. GENERATED FROM PYTHON SOURCE LINES 52-53

We can also plot visualize both first-order and total Sobol' indices:

.. GENERATED FROM PYTHON SOURCE LINES 53-56

.. code-block:: default

    sobol.plot("y", save=False, show=False)
    # Workaround for HTML rendering, instead of ``show=True``
    plt.show()



.. image-sg:: /examples/images/sphx_glr_plot_sensitivity_analysis_001.png
   :alt: Sobol indices for the output y(0)
   :srcset: /examples/images/sphx_glr_plot_sensitivity_analysis_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.619 seconds)


.. _sphx_glr_download_examples_plot_sensitivity_analysis.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_sensitivity_analysis.py <plot_sensitivity_analysis.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_sensitivity_analysis.ipynb <plot_sensitivity_analysis.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

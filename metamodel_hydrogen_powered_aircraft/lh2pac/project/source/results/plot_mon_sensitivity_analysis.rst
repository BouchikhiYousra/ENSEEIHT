
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "results/plot_mon_sensitivity_analysis.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_results_plot_mon_sensitivity_analysis.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_results_plot_mon_sensitivity_analysis.py:


LH2pac Sensitivity analysis
====================

In this example,
we will use the Sobol' analysis to quantify the sensitivity of the surrogate model
to the uncertainty introduced in its input parameters:

.. GENERATED FROM PYTHON SOURCE LINES 10-20

.. code-block:: default

    from gemseo.api import create_surrogate
    from gemseo_mlearning.api import sample_discipline
    import pprint
    from gemseo.api import configure_logger
    from discipline import H2TurboFan
    from plot_mon_uncertain_space import lh2pacUncertainSpace
    from gemseo.uncertainty.sensitivity.sobol.analysis import SobolAnalysis
    from matplotlib import pyplot as plt









.. GENERATED FROM PYTHON SOURCE LINES 21-23

Before starting,
we activate the logger as an optimization process logs meaningful information.

.. GENERATED FROM PYTHON SOURCE LINES 23-26

.. code-block:: default

    configure_logger()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <RootLogger root (INFO)>



.. GENERATED FROM PYTHON SOURCE LINES 27-29

Firstly,
we instantiate the discipline computing the h2turbofan

.. GENERATED FROM PYTHON SOURCE LINES 29-31

.. code-block:: default

    discipline = H2TurboFan()








.. GENERATED FROM PYTHON SOURCE LINES 32-34

Then,
we instantiate the uncertain space:

.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: default

    uncertain_space = lh2pacUncertainSpace()








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Thirdly,
we sample the discipline with a Monte Carlo algorithm:

.. GENERATED FROM PYTHON SOURCE LINES 39-42

.. code-block:: default

    dataset = sample_discipline(discipline, uncertain_space, output_names=["mtow"], algo_name="OT_MONTE_CARLO", n_samples=30)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

        INFO - 21:46:54:  
        INFO - 21:46:54: *** Start DOEScenario execution ***
        INFO - 21:46:54: DOEScenario
        INFO - 21:46:54:    Disciplines: H2TurboFan
        INFO - 21:46:54:    MDO formulation: DisciplinaryOpt
        INFO - 21:46:54: Optimization problem:
        INFO - 21:46:54:    minimize mtow(tgi, tvi, sfc, mass, drag)
        INFO - 21:46:54:    with respect to drag, mass, sfc, tgi, tvi
        INFO - 21:46:54:    over the design space:
        INFO - 21:46:54:    |                                                Parameter space                                                |
        INFO - 21:46:54:    +------+-------------+--------------------+-------------+-------+-----------------------------------------------+
        INFO - 21:46:54:    | name | lower_bound |       value        | upper_bound | type  |              Initial distribution             |
        INFO - 21:46:54:    +------+-------------+--------------------+-------------+-------+-----------------------------------------------+
        INFO - 21:46:54:    | tgi  |     0.25    |       0.285        |    0.305    | float | Triangular(lower=0.25, mode=0.3, upper=0.305) |
        INFO - 21:46:54:    | tvi  |     0.8     | 0.8316666666666667 |     0.85    | float | Triangular(lower=0.8, mode=0.845, upper=0.85) |
        INFO - 21:46:54:    | sfc  |     0.99    | 1.006666666666667  |     1.03    | float |  Triangular(lower=0.99, mode=1.0, upper=1.03) |
        INFO - 21:46:54:    | mass |     0.99    | 1.006666666666667  |     1.03    | float |  Triangular(lower=0.99, mode=1.0, upper=1.03) |
        INFO - 21:46:54:    | drag |     0.99    | 1.006666666666667  |     1.03    | float |  Triangular(lower=0.99, mode=1.0, upper=1.03) |
        INFO - 21:46:54:    +------+-------------+--------------------+-------------+-------+-----------------------------------------------+
        INFO - 21:46:54: Solving optimization problem with algorithm OT_MONTE_CARLO:
        INFO - 21:46:54: Generation of OT_MONTE_CARLO DOE with OpenTURNS
        INFO - 21:46:54: ...   0%|          | 0/30 [00:00<?, ?it]
        INFO - 21:46:55: ...   3%|▎         | 1/30 [00:00<00:00, 39.02 it/sec, obj=8.55e+4]
        INFO - 21:46:56: ...   7%|▋         | 2/30 [00:01<00:01, 19.79 it/sec, obj=8.83e+4]
        INFO - 21:46:56: ...  10%|█         | 3/30 [00:02<00:01, 13.63 it/sec, obj=8.5e+4]
        INFO - 21:46:57: ...  13%|█▎        | 4/30 [00:02<00:02, 10.18 it/sec, obj=8.94e+4]
        INFO - 21:46:58: ...  17%|█▋        | 5/30 [00:03<00:03,  8.31 it/sec, obj=8.5e+4]
        INFO - 21:46:58: ...  20%|██        | 6/30 [00:04<00:03,  6.99 it/sec, obj=8.95e+4]
        INFO - 21:46:59: ...  23%|██▎       | 7/30 [00:04<00:03,  6.06 it/sec, obj=8.69e+4]
        INFO - 21:47:00: ...  27%|██▋       | 8/30 [00:05<00:04,  5.35 it/sec, obj=8.77e+4]
        INFO - 21:47:00: ...  30%|███       | 9/30 [00:06<00:04,  4.77 it/sec, obj=8.52e+4]
        INFO - 21:47:01: ...  33%|███▎      | 10/30 [00:06<00:04,  4.32 it/sec, obj=8.67e+4]
        INFO - 21:47:02: ...  37%|███▋      | 11/30 [00:07<00:04,  3.95 it/sec, obj=8.41e+4]
        INFO - 21:47:02: ...  40%|████      | 12/30 [00:08<00:04,  3.63 it/sec, obj=8.8e+4]
        INFO - 21:47:03: ...  43%|████▎     | 13/30 [00:08<00:05,  3.36 it/sec, obj=8.52e+4]
        INFO - 21:47:04: ...  47%|████▋     | 14/30 [00:09<00:05,  3.15 it/sec, obj=8.62e+4]
        INFO - 21:47:04: ...  50%|█████     | 15/30 [00:10<00:05,  2.95 it/sec, obj=9.03e+4]
        INFO - 21:47:05: ...  53%|█████▎    | 16/30 [00:10<00:05,  2.76 it/sec, obj=8.73e+4]
        INFO - 21:47:05: ...  57%|█████▋    | 17/30 [00:11<00:04,  2.62 it/sec, obj=8.62e+4]
        INFO - 21:47:06: ...  60%|██████    | 18/30 [00:12<00:04,  2.48 it/sec, obj=9.08e+4]
        INFO - 21:47:07: ...  63%|██████▎   | 19/30 [00:12<00:04,  2.35 it/sec, obj=8.4e+4]
        INFO - 21:47:07: ...  67%|██████▋   | 20/30 [00:13<00:04,  2.23 it/sec, obj=8.83e+4]
        INFO - 21:47:08: ...  70%|███████   | 21/30 [00:14<00:04,  2.13 it/sec, obj=8.63e+4]
        INFO - 21:47:09: ...  73%|███████▎  | 22/30 [00:14<00:03,  2.03 it/sec, obj=8.58e+4]
        INFO - 21:47:09: ...  77%|███████▋  | 23/30 [00:15<00:03,  1.94 it/sec, obj=8.74e+4]
        INFO - 21:47:10: ...  80%|████████  | 24/30 [00:16<00:03,  1.87 it/sec, obj=8.4e+4]
        INFO - 21:47:11: ...  83%|████████▎ | 25/30 [00:16<00:02,  1.79 it/sec, obj=8.75e+4]
        INFO - 21:47:11: ...  87%|████████▋ | 26/30 [00:17<00:02,  1.72 it/sec, obj=8.71e+4]
        INFO - 21:47:12: ...  90%|█████████ | 27/30 [00:18<00:01,  1.66 it/sec, obj=9.05e+4]
        INFO - 21:47:13: ...  93%|█████████▎| 28/30 [00:18<00:01,  1.60 it/sec, obj=9.05e+4]
        INFO - 21:47:13: ...  97%|█████████▋| 29/30 [00:19<00:00,  1.55 it/sec, obj=8.63e+4]
        INFO - 21:47:14: ... 100%|██████████| 30/30 [00:20<00:00,  1.50 it/sec, obj=8.45e+4]
        INFO - 21:47:14: ... 100%|██████████| 30/30 [00:20<00:00,  1.50 it/sec, obj=8.45e+4]
        INFO - 21:47:14: Optimization result:
        INFO - 21:47:14:    Optimizer info:
        INFO - 21:47:14:       Status: None
        INFO - 21:47:14:       Message: None
        INFO - 21:47:14:       Number of calls to the objective function by the optimizer: 30
        INFO - 21:47:14:    Solution:
        INFO - 21:47:14:       Objective: 84010.46442896119
        INFO - 21:47:14:       +---------------------------------------------------------------------------------------------------------------+
        INFO - 21:47:14:       |                                                Parameter space                                                |
        INFO - 21:47:14:       +------+-------------+--------------------+-------------+-------+-----------------------------------------------+
        INFO - 21:47:14:       | name | lower_bound |       value        | upper_bound | type  |              Initial distribution             |
        INFO - 21:47:14:       +------+-------------+--------------------+-------------+-------+-----------------------------------------------+
        INFO - 21:47:14:       | tgi  |     0.25    | 0.3017054683707981 |    0.305    | float | Triangular(lower=0.25, mode=0.3, upper=0.305) |
        INFO - 21:47:14:       | tvi  |     0.8     | 0.8448759300814355 |     0.85    | float | Triangular(lower=0.8, mode=0.845, upper=0.85) |
        INFO - 21:47:14:       | sfc  |     0.99    | 0.9953857965497805 |     1.03    | float |  Triangular(lower=0.99, mode=1.0, upper=1.03) |
        INFO - 21:47:14:       | mass |     0.99    | 1.000195199673554  |     1.03    | float |  Triangular(lower=0.99, mode=1.0, upper=1.03) |
        INFO - 21:47:14:       | drag |     0.99    | 1.002552378109875  |     1.03    | float |  Triangular(lower=0.99, mode=1.0, upper=1.03) |
        INFO - 21:47:14:       +------+-------------+--------------------+-------------+-------+-----------------------------------------------+
        INFO - 21:47:14: *** End DOEScenario execution (time: 0:00:20.047051) ***




.. GENERATED FROM PYTHON SOURCE LINES 43-44

Then we create a surrogate discipline:

.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: default

    surrogate_discipline = create_surrogate("LinearRegressor", dataset)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

        INFO - 21:47:14: Build the surrogate discipline: LinReg_H2TurboFan
        INFO - 21:47:14:    Dataset name: H2TurboFan
        INFO - 21:47:14:    Dataset size: 30
        INFO - 21:47:14:    Surrogate model: LinearRegressor
        INFO - 21:47:14: Use the surrogate discipline: LinReg_H2TurboFan
        INFO - 21:47:14:    Inputs: drag, mass, sfc, tgi, tvi
        INFO - 21:47:14:    Outputs: mtow
        INFO - 21:47:14:    Jacobian: use surrogate model jacobian




.. GENERATED FROM PYTHON SOURCE LINES 47-49

From that,
we launch a Sobol' analysis with 10000 samples:

.. GENERATED FROM PYTHON SOURCE LINES 49-52

.. code-block:: default

    sobol = SobolAnalysis([surrogate_discipline], uncertain_space, 10000)
    sobol.compute_indices()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

     WARNING - 21:47:14: No coupling in MDA, switching chain_linearize to True.
        INFO - 21:47:14:  
        INFO - 21:47:14: *** Start DOEScenario execution ***
        INFO - 21:47:14: DOEScenario
        INFO - 21:47:14:    Disciplines: Surrogate discipline: LinReg_H2TurboFan
        INFO - 21:47:14:    Dataset name: H2TurboFan
        INFO - 21:47:14:    Dataset size: 30
        INFO - 21:47:14:    Surrogate model: LinearRegressor
        INFO - 21:47:14:    Inputs: drag, mass, sfc, tgi, tvi
        INFO - 21:47:14:    Outputs: mtow
        INFO - 21:47:14:    MDO formulation: MDF
        INFO - 21:47:14: Optimization problem:
        INFO - 21:47:14:    minimize mtow(tgi, tvi, sfc, mass, drag)
        INFO - 21:47:14:    with respect to drag, mass, sfc, tgi, tvi
        INFO - 21:47:14:    over the design space:
        INFO - 21:47:14:    |                                                Parameter space                                                |
        INFO - 21:47:14:    +------+-------------+--------------------+-------------+-------+-----------------------------------------------+
        INFO - 21:47:14:    | name | lower_bound |       value        | upper_bound | type  |              Initial distribution             |
        INFO - 21:47:14:    +------+-------------+--------------------+-------------+-------+-----------------------------------------------+
        INFO - 21:47:14:    | tgi  |     0.25    | 0.3017054683707981 |    0.305    | float | Triangular(lower=0.25, mode=0.3, upper=0.305) |
        INFO - 21:47:14:    | tvi  |     0.8     | 0.8448759300814355 |     0.85    | float | Triangular(lower=0.8, mode=0.845, upper=0.85) |
        INFO - 21:47:14:    | sfc  |     0.99    | 0.9953857965497805 |     1.03    | float |  Triangular(lower=0.99, mode=1.0, upper=1.03) |
        INFO - 21:47:14:    | mass |     0.99    | 1.000195199673554  |     1.03    | float |  Triangular(lower=0.99, mode=1.0, upper=1.03) |
        INFO - 21:47:14:    | drag |     0.99    | 1.002552378109875  |     1.03    | float |  Triangular(lower=0.99, mode=1.0, upper=1.03) |
        INFO - 21:47:14:    +------+-------------+--------------------+-------------+-------+-----------------------------------------------+
        INFO - 21:47:14: Solving optimization problem with algorithm OT_SOBOL_INDICES:
        INFO - 21:47:14: Generation of OT_SOBOL_INDICES DOE with OpenTURNS
        INFO - 21:47:14: ...   0%|          | 0/9996 [00:00<?, ?it]
        INFO - 21:47:14: ...   2%|▏         | 197/9996 [00:00<00:00, 99687.96 it/sec, obj=8.5e+4]
        INFO - 21:47:14: ...   4%|▍         | 404/9996 [00:00<00:00, 49910.85 it/sec, obj=8.81e+4]
        INFO - 21:47:15: ...   6%|▌         | 612/9996 [00:00<00:00, 33284.74 it/sec, obj=9.07e+4]
        INFO - 21:47:15: ...   8%|▊         | 818/9996 [00:00<00:00, 24602.16 it/sec, obj=8.76e+4]
        INFO - 21:47:15: ...  10%|█         | 1026/9996 [00:00<00:00, 19737.05 it/sec, obj=8.59e+4]
        INFO - 21:47:15: ...  12%|█▏        | 1232/9996 [00:00<00:00, 16479.04 it/sec, obj=8.73e+4]
        INFO - 21:47:15: ...  14%|█▍        | 1437/9996 [00:00<00:00, 14052.79 it/sec, obj=8.62e+4]
        INFO - 21:47:15: ...  16%|█▋        | 1639/9996 [00:00<00:00, 12184.47 it/sec, obj=8.87e+4]
        INFO - 21:47:15: ...  18%|█▊        | 1848/9996 [00:00<00:00, 10855.85 it/sec, obj=8.62e+4]
        INFO - 21:47:15: ...  21%|██        | 2057/9996 [00:01<00:00, 9792.41 it/sec, obj=8.65e+4]
        INFO - 21:47:15: ...  23%|██▎       | 2267/9996 [00:01<00:00, 8917.86 it/sec, obj=8.79e+4]
        INFO - 21:47:15: ...  25%|██▍       | 2477/9996 [00:01<00:00, 8185.87 it/sec, obj=8.6e+4]
        INFO - 21:47:16: ...  27%|██▋       | 2687/9996 [00:01<00:00, 7565.67 it/sec, obj=8.59e+4]
        INFO - 21:47:16: ...  29%|██▉       | 2898/9996 [00:01<00:01, 7031.23 it/sec, obj=8.64e+4]
        INFO - 21:47:16: ...  31%|███       | 3108/9996 [00:01<00:01, 6567.53 it/sec, obj=8.53e+4]
        INFO - 21:47:16: ...  33%|███▎      | 3318/9996 [00:01<00:01, 6162.27 it/sec, obj=8.53e+4]
        INFO - 21:47:16: ...  35%|███▌      | 3528/9996 [00:01<00:01, 5803.98 it/sec, obj=8.56e+4]
        INFO - 21:47:16: ...  37%|███▋      | 3738/9996 [00:01<00:01, 5310.16 it/sec, obj=8.72e+4]
        INFO - 21:47:16: ...  39%|███▉      | 3948/9996 [00:01<00:01, 5041.25 it/sec, obj=8.49e+4]
        INFO - 21:47:16: ...  42%|████▏     | 4158/9996 [00:02<00:01, 4799.10 it/sec, obj=8.54e+4]
        INFO - 21:47:16: ...  44%|████▎     | 4368/9996 [00:02<00:01, 4578.69 it/sec, obj=9.03e+4]
        INFO - 21:47:17: ...  46%|████▌     | 4577/9996 [00:02<00:01, 4377.91 it/sec, obj=8.48e+4]
        INFO - 21:47:17: ...  48%|████▊     | 4786/9996 [00:02<00:01, 4193.64 it/sec, obj=8.7e+4]
        INFO - 21:47:17: ...  50%|████▉     | 4991/9996 [00:02<00:01, 4015.83 it/sec, obj=8.54e+4]
        INFO - 21:47:17: ...  52%|█████▏    | 5201/9996 [00:02<00:01, 3860.04 it/sec, obj=8.56e+4]
        INFO - 21:47:17: ...  54%|█████▍    | 5411/9996 [00:02<00:01, 3715.99 it/sec, obj=8.66e+4]
        INFO - 21:47:17: ...  56%|█████▌    | 5619/9996 [00:02<00:01, 3582.46 it/sec, obj=8.91e+4]
        INFO - 21:47:17: ...  58%|█████▊    | 5827/9996 [00:02<00:01, 3458.26 it/sec, obj=8.59e+4]
        INFO - 21:47:17: ...  60%|██████    | 6036/9996 [00:02<00:01, 3342.27 it/sec, obj=8.93e+4]
        INFO - 21:47:17: ...  62%|██████▏   | 6246/9996 [00:03<00:01, 3233.67 it/sec, obj=8.83e+4]
        INFO - 21:47:17: ...  65%|██████▍   | 6455/9996 [00:03<00:01, 3132.01 it/sec, obj=8.56e+4]
        INFO - 21:47:18: ...  67%|██████▋   | 6665/9996 [00:03<00:01, 3036.71 it/sec, obj=8.85e+4]
        INFO - 21:47:18: ...  69%|██████▉   | 6875/9996 [00:03<00:01, 2947.16 it/sec, obj=8.75e+4]
        INFO - 21:47:18: ...  71%|███████   | 7086/9996 [00:03<00:01, 2862.52 it/sec, obj=8.77e+4]
        INFO - 21:47:18: ...  73%|███████▎  | 7296/9996 [00:03<00:00, 2782.31 it/sec, obj=8.53e+4]
        INFO - 21:47:18: ...  75%|███████▌  | 7506/9996 [00:03<00:00, 2706.89 it/sec, obj=8.58e+4]
        INFO - 21:47:18: ...  77%|███████▋  | 7716/9996 [00:03<00:00, 2635.16 it/sec, obj=8.69e+4]
        INFO - 21:47:18: ...  79%|███████▉  | 7927/9996 [00:03<00:00, 2567.18 it/sec, obj=8.65e+4]
        INFO - 21:47:18: ...  81%|████████▏ | 8138/9996 [00:03<00:00, 2502.77 it/sec, obj=8.61e+4]
        INFO - 21:47:18: ...  84%|████████▎ | 8349/9996 [00:04<00:00, 2441.49 it/sec, obj=8.63e+4]
        INFO - 21:47:18: ...  86%|████████▌ | 8560/9996 [00:04<00:00, 2383.10 it/sec, obj=8.8e+4]
        INFO - 21:47:19: ...  88%|████████▊ | 8771/9996 [00:04<00:00, 2327.39 it/sec, obj=8.62e+4]
        INFO - 21:47:19: ...  90%|████████▉ | 8982/9996 [00:04<00:00, 2274.37 it/sec, obj=8.83e+4]
        INFO - 21:47:19: ...  92%|█████████▏| 9193/9996 [00:04<00:00, 2223.57 it/sec, obj=8.58e+4]
        INFO - 21:47:19: ...  94%|█████████▍| 9404/9996 [00:04<00:00, 2171.64 it/sec, obj=8.59e+4]
        INFO - 21:47:19: ...  96%|█████████▌| 9614/9996 [00:04<00:00, 2125.44 it/sec, obj=8.57e+4]
        INFO - 21:47:19: ...  98%|█████████▊| 9825/9996 [00:04<00:00, 2080.99 it/sec, obj=8.82e+4]
        INFO - 21:47:19: ... 100%|██████████| 9996/9996 [00:04<00:00, 2042.78 it/sec, obj=8.8e+4]
        INFO - 21:47:19: Optimization result:
        INFO - 21:47:19:    Optimizer info:
        INFO - 21:47:19:       Status: None
        INFO - 21:47:19:       Message: None
        INFO - 21:47:19:       Number of calls to the objective function by the optimizer: 9996
        INFO - 21:47:19:    Solution:
        INFO - 21:47:19:       Objective: 83466.19031831645
        INFO - 21:47:19:       +---------------------------------------------------------------------------------------------------------------+
        INFO - 21:47:19:       |                                                Parameter space                                                |
        INFO - 21:47:19:       +------+-------------+--------------------+-------------+-------+-----------------------------------------------+
        INFO - 21:47:19:       | name | lower_bound |       value        | upper_bound | type  |              Initial distribution             |
        INFO - 21:47:19:       +------+-------------+--------------------+-------------+-------+-----------------------------------------------+
        INFO - 21:47:19:       | tgi  |     0.25    | 0.300212450684393  |    0.305    | float | Triangular(lower=0.25, mode=0.3, upper=0.305) |
        INFO - 21:47:19:       | tvi  |     0.8     | 0.8331318732203247 |     0.85    | float | Triangular(lower=0.8, mode=0.845, upper=0.85) |
        INFO - 21:47:19:       | sfc  |     0.99    | 0.9908893471673214 |     1.03    | float |  Triangular(lower=0.99, mode=1.0, upper=1.03) |
        INFO - 21:47:19:       | mass |     0.99    | 0.9918539676310055 |     1.03    | float |  Triangular(lower=0.99, mode=1.0, upper=1.03) |
        INFO - 21:47:19:       | drag |     0.99    | 0.9956834892508308 |     1.03    | float |  Triangular(lower=0.99, mode=1.0, upper=1.03) |
        INFO - 21:47:19:       +------+-------------+--------------------+-------------+-------+-----------------------------------------------+
        INFO - 21:47:19: *** End DOEScenario execution (time: 0:00:05.045928) ***
        INFO - 21:47:21: Use first order indices as main indices.

    {'first': {'mtow': [{'drag': array([0.91670406]), 'mass': array([0.02117337]), 'sfc': array([0.04620977]), 'tgi': array([0.0592]), 'tvi': array([0.0397296])}]}, 'total': {'mtow': [{'drag': array([0.88685442]), 'mass': array([0.00250635]), 'sfc': array([0.04263135]), 'tgi': array([0.03495691]), 'tvi': array([0.01243329])}]}}



.. GENERATED FROM PYTHON SOURCE LINES 53-54

and print the results:

.. GENERATED FROM PYTHON SOURCE LINES 54-57

.. code-block:: default

    pprint.pprint(sobol.first_order_indices)
    pprint.pprint(sobol.total_order_indices)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    {'mtow': [{'drag': array([0.91670406]),
               'mass': array([0.02117337]),
               'sfc': array([0.04620977]),
               'tgi': array([0.0592]),
               'tvi': array([0.0397296])}]}
    {'mtow': [{'drag': array([0.88685442]),
               'mass': array([0.00250635]),
               'sfc': array([0.04263135]),
               'tgi': array([0.03495691]),
               'tvi': array([0.01243329])}]}




.. GENERATED FROM PYTHON SOURCE LINES 58-59

We can also plot & visualize both first-order and total Sobol' indices:

.. GENERATED FROM PYTHON SOURCE LINES 59-61

.. code-block:: default

    sobol.plot("mtow", save=False, show=False, file_path="sobol_analysis")
    plt.show()



.. image-sg:: /results/images/sphx_glr_plot_mon_sensitivity_analysis_001.png
   :alt: Sobol indices for the output mtow(0)
   :srcset: /results/images/sphx_glr_plot_mon_sensitivity_analysis_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  27.067 seconds)


.. _sphx_glr_download_results_plot_mon_sensitivity_analysis.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_mon_sensitivity_analysis.py <plot_mon_sensitivity_analysis.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_mon_sensitivity_analysis.ipynb <plot_mon_sensitivity_analysis.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

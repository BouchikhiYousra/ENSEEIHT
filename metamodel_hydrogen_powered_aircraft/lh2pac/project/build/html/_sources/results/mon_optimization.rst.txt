
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "results/mon_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_results_mon_optimization.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_results_mon_optimization.py:


LH2pac Optimization
============

We want to optimize our real model 

.. GENERATED FROM PYTHON SOURCE LINES 9-16

.. code-block:: default

    from gemseo.api import configure_logger
    from discipline import H2TurboFan
    from mon_design_space import lh2pacDesignSpace
    from gemseo.api import create_scenario
    from matplotlib import pyplot as plt
    from marilib.utils import unit


.. GENERATED FROM PYTHON SOURCE LINES 17-19

Before starting,
we activate the logger as an optimization process logs meaningful information.

.. GENERATED FROM PYTHON SOURCE LINES 19-21

.. code-block:: default

    configure_logger()


.. GENERATED FROM PYTHON SOURCE LINES 22-24

Firstly,
we define the discipline computing the h2turbofan

.. GENERATED FROM PYTHON SOURCE LINES 24-27

.. code-block:: default


    discipline = H2TurboFan()


.. GENERATED FROM PYTHON SOURCE LINES 28-29

Then, we instantiate the design space:

.. GENERATED FROM PYTHON SOURCE LINES 29-31

.. code-block:: default

    design_space = lh2pacDesignSpace()


.. GENERATED FROM PYTHON SOURCE LINES 32-34

Thirdly,
we put these elements together in a scenario

.. GENERATED FROM PYTHON SOURCE LINES 34-45

.. code-block:: default


    scenario = create_scenario([discipline], "DisciplinaryOpt", "mtow", design_space)
    scenario.add_constraint("tofl", "ineq", positive=False, value = 2200.)
    scenario.add_constraint("vapp", "ineq", positive=False, value = unit.mps_kt(137.))
    scenario.add_constraint("vz_mcl", "ineq", positive=True, value = unit.mps_ftpmin(300.)) #ftpmin_mps
    scenario.add_constraint("vz_mcr", "ineq", positive=True, value = unit.mps_ftpmin(0.))
    scenario.add_constraint("oei_path", "ineq", positive=True, value=0.0011)
    scenario.add_constraint("ttc", "ineq", positive=False, value=unit.s_min(25.)) # min_s
    scenario.add_constraint("far", "ineq", positive=False, value=13.4)



.. GENERATED FROM PYTHON SOURCE LINES 46-47

before executing it with a gradient-free optimizer:

.. GENERATED FROM PYTHON SOURCE LINES 47-49

.. code-block:: default

    scenario.execute({"algo": "NLOPT_COBYLA", "max_iter": 30})


.. GENERATED FROM PYTHON SOURCE LINES 50-52

Lastly,
we can plot the optimization history:

.. GENERATED FROM PYTHON SOURCE LINES 52-55

.. code-block:: default

    scenario.post_process("OptHistoryView", save=True, show=True)
    plt.show()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_results_mon_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: mon_optimization.py <mon_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: mon_optimization.ipynb <mon_optimization.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
